# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
# // only npm install
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run test
      - setup_remote_docker
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: 
          name: "Build docker and push to docker hub"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker build -t tanutsun/workshop-docker-epxress-circleci:latest .
              docker build -t tanutsun/workshop-docker-epxress-circleci:${CIRCLE_SHA1} .
              docker push tanutsun/workshop-docker-epxress-circleci:latest
              docker push tanutsun/workshop-docker-epxress-circleci:${CIRCLE_SHA1}
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              docker build -t tanutsun/workshop-docker-epxress-circleci-staging:latest .
              docker push tanutsun/workshop-docker-epxress-circleci-staging:latest
            else
              echo "This is ${CIRCLE_BRANCH}"
            fi
      - run: 
          name: "Call to rancher to deploy"
          command: |
            docker run --rm -it \
              -e CATTLE_ACCESS_KEY="$CATTLE_ACCESS_KEY" \
              -e CATTLE_SECRET_KEY="$CATTLE_SECRET_KEY" \
              -e CATTLE_URL="$CATTLE_URL" \
              etlweather/gaucho upgrade $RANCHER_EXAMPLE_NODEJS \
              --imageUuid 'docker:tanutsun/workshop-docker-epxress-circleci:latest' \
              --batch_size 3 --start_first \
              --auto_complete --timeout 600
      - run: echo Done
